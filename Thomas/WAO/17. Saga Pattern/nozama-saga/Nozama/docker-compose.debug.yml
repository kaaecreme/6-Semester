# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP.NET Core service.

version: '3.9'

services:
#  recommendations:
#    image: recommendations
#    depends_on:
#      - db-recommendations
#    restart: always
#    build:
#      context: .
#      dockerfile: Nozama.Recommendations/Dockerfile
#    ports:
#      - 5100:5100
#    environment:
#      ASPNETCORE_ENVIRONMENT: 'Development'
#      CONNECTION_STRING: 'Server=db-recommendations,1433;Database=master;User=sa;Password=suchSecureVeryWordSoPassW0w!;TrustServerCertificate=True'
#      PRODUCT_CATALOG_SERVICE_URI: 'http://productcatalog:5200/recommendation'
#    volumes:
#      - ~/.vsdbg:/remote_debugger:rw
  productcatalog:
    image: productcatalog
    depends_on:
      - db-productcatalog
    restart: always
    build:
      context: .
      dockerfile: Nozama.ProductCatalog/Dockerfile
    ports:
      - 5200:5200
    environment:
      ASPNETCORE_ENVIRONMENT: 'Development'
      CONNECTION_STRING: 'Server=db-productcatalog,1433;Database=master;User=sa;Password=suchSecureVeryWordSoPassW0w!;TrustServerCertificate=True'
    volumes:
      - ~/.vsdbg:/remote_debugger:rw
  orderservice:
    image: orderservice
    depends_on:
      - db-orderservice
    restart: always
    build:
      context: .
      dockerfile: Nozama.OrderService/Dockerfile
    ports:
      - 5300:5300
    environment:
      ASPNETCORE_ENVIRONMENT: 'Development'
      CONNECTION_STRING: 'Server=db-orderservice,1433;Database=master;User=sa;Password=suchSecureVeryWordSoPassW0w!;TrustServerCertificate=True'
    volumes:
      - ~/.vsdbg:/remote_debugger:rw
  inventoryservice:
    image: inventoryservice
    depends_on:
      - db-inventoryservice
    restart: always
    build:
      context: .
      dockerfile: Nozama.InventoryService/Dockerfile
    ports:
      - 5400:5400
    environment:
      ASPNETCORE_ENVIRONMENT: 'Development'
      CONNECTION_STRING: 'Server=db-orderservice,1433;Database=master;User=sa;Password=suchSecureVeryWordSoPassW0w!;TrustServerCertificate=True'
    volumes:
      - ~/.vsdbg:/remote_debugger:rw
  paymentservice:
    depends_on:
      - db-paymentservice
    build: ./Nozama.PaymentService/
    restart: always
    ports:
      - 5500:5500
    environment:
      - NODE_DOCKER_PORT=5500
      - CONNECTION_STRING=mongodb://PaymentUser:123456@db-paymentservice:27017/
    stdin_open: true
    tty: true

  # DBs 
#  db-recommendations:
#    image: mcr.microsoft.com/mssql/server
#    user: root
#    volumes:
#      - recommendations:/var/opt/mssql/data
#    environment:
#      SA_PASSWORD: "suchSecureVeryWordSoPassW0w!"
#      ACCEPT_EULA: "Y"
  db-productcatalog:
    image: mcr.microsoft.com/mssql/server
    user: root
    volumes:
      - productcatalog:/var/opt/mssql/data
    environment:
      SA_PASSWORD: "suchSecureVeryWordSoPassW0w!"
      ACCEPT_EULA: "Y"
  db-orderservice:
    image: mcr.microsoft.com/mssql/server
    user: root
    volumes:
      - orderservice:/var/opt/mssql/data
    environment:
      SA_PASSWORD: "suchSecureVeryWordSoPassW0w!"
      ACCEPT_EULA: "Y"
  db-inventoryservice:
    image: mcr.microsoft.com/mssql/server
    user: root
    volumes:
      - inventoryservice:/var/opt/mssql/data
    environment:
      SA_PASSWORD: "suchSecureVeryWordSoPassW0w!"
      ACCEPT_EULA: "Y"
  db-paymentservice:
    image: mongo:5.0.2  
    restart: unless-stopped
    ports:
      - 27018:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=PaymentUser
      - MONGO_INITDB_ROOT_PASSWORD=123456
    volumes:
      - paymentservice:/data/db
volumes:
#  recommendations:
#    name: recommendations-db
  productcatalog:
    name: productcatalog-db
  orderservice:
    name: orderservice-db
  inventoryservice:
    name: inventoryservice-db
  paymentservice:
    name: paymentservice-db
